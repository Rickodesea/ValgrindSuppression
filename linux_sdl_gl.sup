{
   opengl_memcpy_addr8
   Memcheck:Addr8
   fun:memcpy@GLIBC*
   obj:/usr/lib/x86_64-linux-gnu/dri/*_dri.so
   ...
}

{
   opengl_memcpy_addr1
   Memcheck:Addr1
   fun:memcpy@GLIBC*
   obj:/usr/lib/x86_64-linux-gnu/dri/*_dri.so
   ...
}

{
   opengl_memset_addr8
   Memcheck:Addr8
   fun:memset
   obj:/usr/lib/x86_64-linux-gnu/dri/*_dri.so
   ...
}

{
   sdl_leak_reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:SDL_Init_REAL
   ...
}

{
   x11_leak_reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   obj:/usr/lib/x86_64-linux-gnu/libX11.so.*
   ...
}

{
   sdl_leak_indirect
   Memcheck:Leak
   match-leak-kinds: indirect
   ...
   fun:SDL_Init_REAL
   ...
}

{
  sdl_leak_definite
   Memcheck:Leak
   match-leak-kinds: definite
   ...
   fun:SDL_Init_REAL
   ...
}

# OpenGL Calls DL under the Hood - Taken straight out of Valgrind --gen-suppressions
# Could overlap with non-graphics DL api calls
# But, If you are not using DL directly, then don't worry about this
{
   dl_leak_reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:dlopen@@GLIBC*
   ...
}

# Same as above but more generic
# Could overlap with non-graphics DL api calls
# But, If you are not using DL directly, then don't worry about this
{
   dl_leak_reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:_dl_*
   ...
}

{
   x11_leak_indirect
   Memcheck:Leak
   match-leak-kinds: indirect
   ...
   obj:/usr/lib/x86_64-linux-gnu/libX11.so.*
   ...
}

{
   x11_leak_definite
   Memcheck:Leak
   match-leak-kinds: definite
   ...
   obj:/usr/lib/x86_64-linux-gnu/libX11.so.*
   ...
}

{
   x11_leak_possible
   Memcheck:Leak
   match-leak-kinds: possible
   ...
   obj:/usr/lib/x86_64-linux-gnu/libX11.so.*
   ...
}

{
   opengl_leak_reachable
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   obj:/usr/lib/x86_64-linux-gnu/libGLX.so.*
   ...
}